Tugas 1

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int card_value(char card) {
    if (card >= '2' && card <= '9') {
        return card - '0';
    } else if (card == 'J') {
        return 11;
    } else if (card == 'Q') {
        return 12;
    } else if (card == 'K') {
        return 13;
    }
    return -1;
}

int min_swaps_to_sort(char cards[], int n) {
    int swaps = 0;
    for (int i = 0; i < n - 1; i++) {
        int min_idx = i;
        for (int j = i + 1; j < n; j++) {
            if (card_value(cards[j]) < card_value(cards[min_idx])) {
                min_idx = j;
            }
        }
        if (min_idx != i) {
            char temp = cards[i];
            cards[i] = cards[min_idx];
            cards[min_idx] = temp;
            swaps++;
            printf("Pertukaran %d: %s\n", swaps, cards);
        }
    }
    return swaps;
}

int main() {
    int n;
    scanf("%d", &n);
    char cards[n+1]; 
    scanf(" %[^\n]", cards);

    int min_swaps = min_swaps_to_sort(cards, n);
    printf("Jumlah minimal langkah pertukaran: %d\n", min_swaps);

    return 0;
}


Tugas 2

#include <stdio.h>

// Fungsi untuk mengecek apakah posisi (x, y) valid pada papan catur 8x8
int isValid(int x, int y) {
    return (x >= 0 && x < 8 && y >= 0 && y < 8);
}

// Fungsi untuk menandai semua langkah yang mungkin dilakukan oleh kuda pada papan catur
void koboImaginaryChess(int i, int j, int size, int *chessBoard) {
    // Langkah-langkah yang mungkin dilakukan oleh kuda
    int movesX[] = {2, 1, -1, -2, -2, -1, 1, 2};
    int movesY[] = {1, 2, 2, 1, -1, -2, -2, -1};

    // Menandai setiap langkah yang mungkin dilakukan oleh kuda
    for (int k = 0; k < 8; k++) {
        int nextX = i + movesX[k];
        int nextY = j + movesY[k];
        if (isValid(nextX, nextY)) {
            *(chessBoard + nextX * size + nextY) = 1; // Menandai langkah kuda dengan nilai 1
        }
    }
}

int main() {
    int i, j;
    scanf("%d %d", &i, &j); // Membaca input posisi i dan j

    int size = 8; // Ukuran papan catur
    int chessBoard[size][size]; // Array 2D untuk papan catur

    // Inisialisasi papan catur dengan nilai awal 0
    for (int x = 0; x < size; x++) {
        for (int y = 0; y < size; y++) {
            chessBoard[x][y] = 0;
        }
    }

    koboImaginaryChess(i, j, size, (int *)chessBoard); // Memanggil fungsi untuk menandai langkah kuda

    // Menampilkan papan catur setelah langkah kuda ditandai
    for (int x = 0; x < size; x++) {
        for (int y = 0; y < size; y++) {
            printf("%d ", chessBoard[x][y]);
        }
        printf("\n");
    }

    return 0;
}
